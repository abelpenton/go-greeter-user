project_name: go-greeter-user

builds:
  - env:
      - CGO_ENABLED=0
    goos:
      - linux
      - darwin
      - windows
    goarch:
      - amd64
      - arm64
    ignore:
      - goos: windows
        goarch: arm64

archives:
  - format: tar.gz
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}

checksum:
  name_template: "checksums.txt"

metadata:
  mod_timestamp: "{{ .CommitTimestamp }}"

brews:
  - name: greeter-cli
    homepage: https://github.com/abelpenton/go-greeter-user
    description: "A simple CLI to greet users"
    repository:
      owner: abelpenton
      name: homebrew-go-greeter-user
      token: "{{ .Env.HOMEBREW_TAP_GITHUB_TOKEN }}"

publishers:
  - name: npm
    cmd: |
      set -e
      echo "Setting up NPM package structure..."

      # Create npm package directory
      mkdir -p npm-package/bin

      # Copy package.json to npm-package
      cp package.json npm-package/

      # Find and copy the Linux x64 binary (this will be the main one for NPM)
      find dist -name "go-greeter-user" -path "*/linux_x86_64/*" -exec cp {} npm-package/bin/ \; || echo "Linux x64 binary not found"

      # Update version in package.json
      cd npm-package
      npm version {{ .Tag }} --no-git-tag-version --allow-same-version

      # Set npm token
      echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > .npmrc

      # List contents for debugging
      echo "NPM package contents:"
      find . -type f

      # Publish to NPM
      npm publish --access public
    env:
      - NPM_TOKEN={{ .Env.NPM_TOKEN }}
